/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import code.AlfabetoTotal;
import code.Estado;
import code.TuringMachine;
import code.Funcao;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import utilities.GUIMessage;

/**
 *
 * @author Vinicios
 */
public class MainScreen extends javax.swing.JFrame {

    // Model lists
    private DefaultListModel mlist_cabecote;
    private DefaultListModel mlist_estados;
    private DefaultListModel mlist_funcoes;
    private DefaultListModel mlist_alfabetos;
    private DefaultListModel mlist_alfabetosAuxiliares;
    private DefaultTableModel tmTabela;
    private DefaultTableModel tmFita;

    static TuringMachine maquina;
    private DefaultListCellRenderer renderer;

    private static List<String> listaEstadosNome;
    private static List<Estado> listaEstadosTotal;
    private static List<Funcao> listaFuncoes;
    private static AlfabetoTotal alfabetos;
    private static List<String> fita;

    private List<String> jlTabelaColunas;

    /**
     * Creates new form Tela
     */
    public MainScreen() {
        initComponents();
        maquina = new TuringMachine();
        mlist_cabecote = new DefaultListModel();
        mlist_estados = new DefaultListModel();
        mlist_funcoes = new DefaultListModel();
        mlist_alfabetos = new DefaultListModel();
        mlist_alfabetosAuxiliares = new DefaultListModel();
        tmTabela = (DefaultTableModel) jtTabela.getModel();
        tmFita = (DefaultTableModel) jtFita.getModel();
        tmTabela.setColumnCount(0);

        listaEstadosNome = TuringMachine.getListaEstadosNome();
        listaEstadosTotal = TuringMachine.getListaEstadosTotal();
        listaFuncoes = TuringMachine.getListaFuncoes();
        alfabetos = TuringMachine.getAlfabeto();
        fita = TuringMachine.getFita();

        /*
         Vinculando os models as Jlists...
         */
        jlEstados.setModel(mlist_estados);
        jlFuncoes.setModel(mlist_funcoes);
        jlAlfabetos.setModel(mlist_alfabetos);
        jlAuxiliares.setModel(mlist_alfabetosAuxiliares);

        jlTabelaColunas = new ArrayList();

        // Desabilitando botões
        jbTelaFuncao.setEnabled(false);
        jbIniciar.setEnabled(false);
        jbRemoverEstado.setEnabled(false);
        jbRemoverAlfabeto.setEnabled(false);
        jbRemoverFuncao.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpTuringMachine = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtTabela = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtFita = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jpFita = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtfInserirFita = new javax.swing.JTextField();
        jbInserirFita = new javax.swing.JButton();
        jbLimparFita = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jbIniciar = new javax.swing.JButton();
        jpFuncoes = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jbTelaFuncao = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jlFuncoes = new javax.swing.JList<>();
        jbRemoverFuncao = new javax.swing.JButton();
        jpEstados = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jbTelaEstado = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlEstados = new javax.swing.JList<>();
        jbRemoverEstado = new javax.swing.JButton();
        jpAlfabeto = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlAlfabetos = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        jlAuxiliares = new javax.swing.JList<>();
        jbInserirAlfabeto = new javax.swing.JButton();
        jbDefinirAlfabetoAuxiliar = new javax.swing.JButton();
        jbRemoverAlfabeto = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Turing Machine");

        jpTuringMachine.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jtTabela.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jtTabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"", null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"", null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"", null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"", null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"", null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"", null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"", null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {"", null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "", "", "", "", "", "", "", "", "", "", "", "", "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTabela.setRowSelectionAllowed(false);
        jtTabela.setShowHorizontalLines(false);
        jtTabela.setShowVerticalLines(false);
        jtTabela.getTableHeader().setResizingAllowed(false);
        jtTabela.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(jtTabela);

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel5.setText("Tabela de Transições:");

        jtFita.setFont(new java.awt.Font("Dialog", 0, 15)); // NOI18N
        jtFita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "-", "-", "-", "(Cabeçote)", "-", "-", "-"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtFita.setRowSelectionAllowed(false);
        jtFita.setShowHorizontalLines(false);
        jtFita.setShowVerticalLines(false);
        jtFita.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(jtFita);

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel3.setText("Fita:");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setText("Máquina de Turing");

        jpFita.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel2.setText("Inserir Caractéres na Fita:");

        jbInserirFita.setText("Inserir");
        jbInserirFita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInserirFitaActionPerformed(evt);
            }
        });

        jbLimparFita.setText("Limpar");
        jbLimparFita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparFitaActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel8.setText("Fita");

        javax.swing.GroupLayout jpFitaLayout = new javax.swing.GroupLayout(jpFita);
        jpFita.setLayout(jpFitaLayout);
        jpFitaLayout.setHorizontalGroup(
            jpFitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFitaLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(jpFitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel8)
                    .addComponent(jLabel2)
                    .addComponent(jtfInserirFita)
                    .addGroup(jpFitaLayout.createSequentialGroup()
                        .addComponent(jbInserirFita, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(jbLimparFita, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50))
        );
        jpFitaLayout.setVerticalGroup(
            jpFitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpFitaLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfInserirFita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpFitaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbInserirFita)
                    .addComponent(jbLimparFita))
                .addContainerGap())
        );

        jbIniciar.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jbIniciar.setText("Iniciar");
        jbIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbIniciarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpTuringMachineLayout = new javax.swing.GroupLayout(jpTuringMachine);
        jpTuringMachine.setLayout(jpTuringMachineLayout);
        jpTuringMachineLayout.setHorizontalGroup(
            jpTuringMachineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpTuringMachineLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpTuringMachineLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jpTuringMachineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpTuringMachineLayout.createSequentialGroup()
                        .addComponent(jpFita, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jpTuringMachineLayout.createSequentialGroup()
                        .addGroup(jpTuringMachineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(16, 16, 16))
        );
        jpTuringMachineLayout.setVerticalGroup(
            jpTuringMachineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTuringMachineLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jpTuringMachineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jpTuringMachineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jpFita, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jpFuncoes.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel6.setText("Funções");

        jbTelaFuncao.setText("Criar");
        jbTelaFuncao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTelaFuncaoActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(jlFuncoes);

        jbRemoverFuncao.setText("Remover");
        jbRemoverFuncao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverFuncaoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpFuncoesLayout = new javax.swing.GroupLayout(jpFuncoes);
        jpFuncoes.setLayout(jpFuncoesLayout);
        jpFuncoesLayout.setHorizontalGroup(
            jpFuncoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFuncoesLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jpFuncoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(jpFuncoesLayout.createSequentialGroup()
                        .addComponent(jbTelaFuncao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbRemoverFuncao))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jLabel6))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jpFuncoesLayout.setVerticalGroup(
            jpFuncoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFuncoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpFuncoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbTelaFuncao)
                    .addComponent(jbRemoverFuncao))
                .addContainerGap())
        );

        jpEstados.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel7.setText("Estados");

        jbTelaEstado.setText("Inserir");
        jbTelaEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbTelaEstadoActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(jlEstados);

        jbRemoverEstado.setText("Remover");
        jbRemoverEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverEstadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpEstadosLayout = new javax.swing.GroupLayout(jpEstados);
        jpEstados.setLayout(jpEstadosLayout);
        jpEstadosLayout.setHorizontalGroup(
            jpEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEstadosLayout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addGroup(jpEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jpEstadosLayout.createSequentialGroup()
                        .addGroup(jpEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpEstadosLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel7))
                            .addGroup(jpEstadosLayout.createSequentialGroup()
                                .addComponent(jbTelaEstado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbRemoverEstado)))
                        .addGap(0, 9, Short.MAX_VALUE)))
                .addGap(30, 30, 30))
        );
        jpEstadosLayout.setVerticalGroup(
            jpEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpEstadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpEstadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbTelaEstado)
                    .addComponent(jbRemoverEstado))
                .addContainerGap())
        );

        jpAlfabeto.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 20)); // NOI18N
        jLabel10.setText("Alfabetos");

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel11.setText("Alfabetos");

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 15)); // NOI18N
        jLabel12.setText("Alfabetos Auxiliares");

        jScrollPane1.setViewportView(jlAlfabetos);

        jScrollPane6.setViewportView(jlAuxiliares);

        jbInserirAlfabeto.setText("Inserir");
        jbInserirAlfabeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbInserirAlfabetoActionPerformed(evt);
            }
        });

        jbDefinirAlfabetoAuxiliar.setText("Modificar");
        jbDefinirAlfabetoAuxiliar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbDefinirAlfabetoAuxiliarActionPerformed(evt);
            }
        });

        jbRemoverAlfabeto.setText("Remover");
        jbRemoverAlfabeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbRemoverAlfabetoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpAlfabetoLayout = new javax.swing.GroupLayout(jpAlfabeto);
        jpAlfabeto.setLayout(jpAlfabetoLayout);
        jpAlfabetoLayout.setHorizontalGroup(
            jpAlfabetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAlfabetoLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jpAlfabetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(jpAlfabetoLayout.createSequentialGroup()
                        .addComponent(jbInserirAlfabeto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbRemoverAlfabeto))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpAlfabetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jbDefinirAlfabetoAuxiliar)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(30, 30, 30))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpAlfabetoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(176, 176, 176))
        );
        jpAlfabetoLayout.setVerticalGroup(
            jpAlfabetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpAlfabetoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpAlfabetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpAlfabetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpAlfabetoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbInserirAlfabeto)
                    .addComponent(jbRemoverAlfabeto)
                    .addComponent(jbDefinirAlfabetoAuxiliar))
                .addGap(6, 6, 6))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpEstados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpFuncoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jpAlfabeto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpTuringMachine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jpTuringMachine, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jpEstados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jpFuncoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jpAlfabeto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jbInserirFitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInserirFitaActionPerformed
        if (fita.size() > 1) {
            fita.remove(fita.size() - 1);
        }
        if (jtfInserirFita.getText().length() < 2 && !jtfInserirFita.getText().trim().equals("")) {
            fita.add(jtfInserirFita.getText());
            jtfInserirFita.setText("");
            jbIniciar.setEnabled(true);
        } else {
            System.out.println("Não é caracter");
        }
        fita.add(TuringMachine.getAlfabeto().getVazio());
        atualizarTabelaFita();
    }//GEN-LAST:event_jbInserirFitaActionPerformed

    private void jbLimparFitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparFitaActionPerformed
        maquina.limparFita();
        jbIniciar.setEnabled(false);
        atualizarTabelaFita();
    }//GEN-LAST:event_jbLimparFitaActionPerformed

    private void jbTelaEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTelaEstadoActionPerformed
        CreateState telaCriarEstado = new CreateState(this, this, rootPaneCheckingEnabled, listaEstadosNome, maquina, listaEstadosTotal);
        telaCriarEstado.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_jbTelaEstadoActionPerformed

    private void jbInserirAlfabetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbInserirAlfabetoActionPerformed
        AddAlphabet telaAdicionarAlfabeto = new AddAlphabet(this, this, rootPaneCheckingEnabled, alfabetos);
        telaAdicionarAlfabeto.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_jbInserirAlfabetoActionPerformed

    private void jbTelaFuncaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbTelaFuncaoActionPerformed
        CreateFunction telaCriarFuncao = new CreateFunction(this, this, rootPaneCheckingEnabled, listaFuncoes, listaEstadosNome, alfabetos);
        telaCriarFuncao.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_jbTelaFuncaoActionPerformed

    private void jbDefinirAlfabetoAuxiliarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbDefinirAlfabetoAuxiliarActionPerformed
        AddAuxiliaryAlphabets telaAlfabetosAuxiliares = new AddAuxiliaryAlphabets(this, this, rootPaneCheckingEnabled, alfabetos);
        telaAlfabetosAuxiliares.setVisible(rootPaneCheckingEnabled);
    }//GEN-LAST:event_jbDefinirAlfabetoAuxiliarActionPerformed

    private void jbIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbIniciarActionPerformed
        TuringMachine.setCabecote(0);
        TuringMachine.setEstadoInicial(TuringMachine.getEstadoInicial());
        boolean resultadoBusca = false;
        while (!resultadoBusca) {
            for (int count = 0; count < listaFuncoes.size(); count++) {
                resultadoBusca = maquina.executar(listaFuncoes.get(count));
                atualizarTabelaFita();
                if (resultadoBusca == true) {
                    break;
                }
            }
        }
    }//GEN-LAST:event_jbIniciarActionPerformed

    private void jbRemoverEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverEstadoActionPerformed
        int indiceSelecionado = jlEstados.getSelectedIndex();
        if (indiceSelecionado != -1) {
            listaEstadosTotal.remove(indiceSelecionado);
            listaEstadosNome.remove(indiceSelecionado);
            atualizarEstados();
            ativarBotaoFuncao();
        } else {
            GUIMessage.error("Selecione um item para remover!");
        }
    }//GEN-LAST:event_jbRemoverEstadoActionPerformed

    private void jbRemoverFuncaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverFuncaoActionPerformed
        int indiceSelecionado = jlFuncoes.getSelectedIndex();
        if (indiceSelecionado != -1) {
            listaFuncoes.remove(indiceSelecionado);
            atualizarFuncoes();
            atualizarTabelaMaquina();
        } else {
            GUIMessage.error("Selecione um item para remover!");
        }
    }//GEN-LAST:event_jbRemoverFuncaoActionPerformed

    private void jbRemoverAlfabetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbRemoverAlfabetoActionPerformed
        int indiceSelecionado = jlAlfabetos.getSelectedIndex();
        if (indiceSelecionado != -1) {
            alfabetos.getAlfabetos().remove(indiceSelecionado);
            atualizarAlfabetos();
        } else {
            GUIMessage.error("Selecione um item para remover!");
        }
    }//GEN-LAST:event_jbRemoverAlfabetoActionPerformed

    public void atualizarEstados() {
        mlist_estados.clear();
        if (!listaEstadosNome.isEmpty()) {
            for (int count = 0; count < listaEstadosNome.size(); count++) {
                mlist_estados.addElement(listaEstadosNome.get(count));
            }
            jbRemoverEstado.setEnabled(true);
        }
    }

    public void atualizarFuncoes() {
        mlist_funcoes.clear();
        if (!listaFuncoes.isEmpty()) {
            for (int count = 0; count < listaFuncoes.size(); count++) {
                Funcao temp_func = listaFuncoes.get(count);
                String atualEstado = temp_func.getEstadoAtual();
                String proxEstado = temp_func.getEstadoProximo();
                String escreve = temp_func.getEscreve();
                String direcao = temp_func.getDirecao();
                mlist_funcoes.addElement("(" + atualEstado + ") " + "(" + proxEstado + ", " + escreve + ", " + direcao + ")");
            }
            jbRemoverFuncao.setEnabled(true);
        }
    }

    public void atualizarAlfabetos() {
        mlist_alfabetos.clear();
        List<String> temp_listaAlfabetos = alfabetos.getAlfabetos();
        if (!temp_listaAlfabetos.isEmpty()) {
            for (int count = 0; count < temp_listaAlfabetos.size(); count++) {
                mlist_alfabetos.addElement(temp_listaAlfabetos.get(count));
            }
            jbRemoverAlfabeto.setEnabled(true);
        }
        popularColunasTabela();
    }

    public void atualizarAuxiliares() {
        mlist_alfabetosAuxiliares.clear();
        mlist_alfabetosAuxiliares.addElement(alfabetos.getInicio());
        mlist_alfabetosAuxiliares.addElement(alfabetos.getVazio());
        List<String> temp_auxAlfabetos = alfabetos.getAuxiliares();
        for (int count = 0; count < temp_auxAlfabetos.size(); count++) {
            mlist_alfabetosAuxiliares.addElement(temp_auxAlfabetos.get(count));
        }
        popularColunasTabela();
    }

    public void atualizarTabelaFita() {
        tmFita.setRowCount(0);
        System.out.println("O cabecote esta em: " + TuringMachine.getCabecote());
        List linha = new ArrayList();
        for (int count = TuringMachine.getCabecote() - 3; count < fita.size(); count++) {
            if (count < 0) {
                linha.add("");
            } else {
                linha.add(fita.get(count));
            }
        }
        tmFita.addRow(linha.toArray());
    }

    public void popularColunasTabela() {
        if (!alfabetos.getAlfabetos().isEmpty() && !alfabetos.getAuxiliares().isEmpty()) {
            jlTabelaColunas = new ArrayList<>();

            tmTabela.setColumnCount(0);
            tmTabela.addColumn("∏");
            tmTabela.addColumn(alfabetos.getInicio());
            jlTabelaColunas.add("Estado no qual este programa está no momento atual, esse texto é utilizado para obter uma sequencia correta sem complicar o algoritmo, evitando achar uma palavra igual a esta no indice 0!");
            jlTabelaColunas.add(alfabetos.getInicio());

            List<String> temp_listaAlfabetos = alfabetos.getAlfabetos();
            for (int count = 0; count < temp_listaAlfabetos.size(); count++) {
                tmTabela.addColumn(temp_listaAlfabetos.get(count));
                jlTabelaColunas.add(temp_listaAlfabetos.get(count));
            }

            List<String> temp_listaAuxiliares = alfabetos.getAuxiliares();
            for (int count = 0; count < temp_listaAuxiliares.size(); count++) {
                tmTabela.addColumn(temp_listaAuxiliares.get(count));
                jlTabelaColunas.add(temp_listaAuxiliares.get(count));
            }

            tmTabela.addColumn(alfabetos.getVazio());
            jlTabelaColunas.add(alfabetos.getVazio());

            for (int count = 0; count < jlTabelaColunas.size(); count++) {
                System.out.println(count + " :" + jlTabelaColunas.get(count));
            }
        }
    }

    public void atualizarTabelaMaquina() {
        tmTabela.setRowCount(0);
        for (int i = 0; i < listaEstadosNome.size(); i++) {
            String temp_estado = listaEstadosNome.get(i);
            List linha = new ArrayList();
            linha.add(temp_estado);
            for (int count = 1; count < jlTabelaColunas.size(); count++) {
                linha.add(" ");
            }
            for (int j = 0; j < listaFuncoes.size(); j++) {

                Funcao temp_funcao = listaFuncoes.get(j);
                for (int count = 0; count < jlTabelaColunas.size(); count++) {
                    String temp_colunas = jlTabelaColunas.get(count);

                    if (temp_funcao.getEstadoAtual().equals(temp_estado) && temp_funcao.getLeitura().equals(temp_colunas)) {
                        if (linha.get(count).equals(" ")) {
                            linha.set(count, "(" + temp_funcao.getEstadoProximo() + ", " + temp_funcao.getEscreve() + ", " + temp_funcao.getDirecao() + ")");
                        } else {
                            linha.set(count, linha.get(count) + ", " + "(" + temp_funcao.getEstadoProximo() + ", " + temp_funcao.getEscreve() + ", " + temp_funcao.getDirecao() + ")");
                        }
                    }
                }
            }
            tmTabela.addRow(linha.toArray());
        }
    }

    public void ativarBotaoFuncao() {
        if (!listaEstadosNome.isEmpty() && !alfabetos.getAlfabetos().isEmpty() && !alfabetos.getAuxiliares().isEmpty()) {
            jbTelaFuncao.setEnabled(true);
        } else {
            jbTelaFuncao.setEnabled(false);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JButton jbDefinirAlfabetoAuxiliar;
    private javax.swing.JButton jbIniciar;
    private javax.swing.JButton jbInserirAlfabeto;
    private javax.swing.JButton jbInserirFita;
    private javax.swing.JButton jbLimparFita;
    private javax.swing.JButton jbRemoverAlfabeto;
    private javax.swing.JButton jbRemoverEstado;
    private javax.swing.JButton jbRemoverFuncao;
    private javax.swing.JButton jbTelaEstado;
    private javax.swing.JButton jbTelaFuncao;
    private javax.swing.JList<String> jlAlfabetos;
    private javax.swing.JList<String> jlAuxiliares;
    private javax.swing.JList<String> jlEstados;
    private javax.swing.JList<String> jlFuncoes;
    private javax.swing.JPanel jpAlfabeto;
    private javax.swing.JPanel jpEstados;
    private javax.swing.JPanel jpFita;
    private javax.swing.JPanel jpFuncoes;
    private javax.swing.JPanel jpTuringMachine;
    private javax.swing.JTable jtFita;
    private javax.swing.JTable jtTabela;
    private javax.swing.JTextField jtfInserirFita;
    // End of variables declaration//GEN-END:variables
}
